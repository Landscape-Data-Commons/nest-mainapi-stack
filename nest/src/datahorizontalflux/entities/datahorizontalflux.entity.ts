import { dataHorizontalFlux } from '@prisma/client';
import { ApiHideProperty, ApiProperty } from '@nestjs/swagger';

export class DatahorizontalfluxEnt implements dataHorizontalFlux {
  @ApiHideProperty()
  take?: number;

  @ApiHideProperty()
  cursor?: number;
  
  @ApiProperty({
    type: Number,
    required: false,
    description: 'Autoincrement id generated by the database.',
  })
  rid: number;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  BoxID: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  StackID: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  Height: number;

  @ApiProperty({
    type: Date,
    required: false,
    // example: '2021-08-04',
    description: '',
  })
  DateEstablished: Date;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  Description: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  openingSize: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  processMethod: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  ovenTemp: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  BoxType: number;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  azimuth: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  SamplerType: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  InletArea: number;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  ProjectKey: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  Location: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  ItemType: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  trapOpeningArea: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  GPSCoordSys: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  Datum: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  Zone: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  Easting: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  Northing: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  Longitude: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  Latitude: number;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  RecKey: string;

  @ApiProperty({
    type: Date,
    required: false,
    // example: '2021-08-04',
    description: '',
  })
  collectDate: Date;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  beakerNbr: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  emptyWeight: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  recordedWeight: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  sedimentWeight: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  daysExposed: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  sedimentGperDay: number;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  sedimentArchived: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  Notes: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  sedimentGperDayByInlet: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '',
  })
  SeqNo: number;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  SampleCompromised: string;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  PrimaryKey: string;

  @ApiProperty({
    type: Date,
    required: false,
    // example: '2021-08-04',
    description: '',
  })
  DateLoadedInDb: Date;

  @ApiProperty({
    type: String,
    required: false,
    description: '',
  })
  DBKey: string;
}
