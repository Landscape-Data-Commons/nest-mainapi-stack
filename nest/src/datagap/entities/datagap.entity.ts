import { dataGap, Prisma } from '@prisma/client';
import { ApiHideProperty, ApiProperty } from '@nestjs/swagger';

export class DatagapEnt implements dataGap {
  @ApiHideProperty()
  take?: number;

  @ApiHideProperty()
  cursor?: Prisma.dataGapWhereUniqueInput;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'Autoincrement id generated by the database.',
  })
  rid: number;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Unique identifier for each plot-visit.',
  })
  PrimaryKey: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Code denoting original database information about the project.',
  })
  DBKey: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Unique identifier of the broader project under which data were collected.',
    enum: ['NDOW', 'NWERN', 'RHEM', 'BLM-AIM'],
  })
  ProjectKey: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Type of gap data: P = perennial canopy gap, B = basal gap, C = canopy gap.',
    enum: ['P', 'B', 'C'],
  })
  RecType: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'Auto-generated sequence number of recorded gap order.',
  })
  SeqNo: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'Start position of canopy/basal gap along transect (line).',
  })
  GapStart: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'End position of canopy/basal gap along transect (line).',
  })
  GapEnd: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'Length of canopy/basal gap.',
  })
  Gap: number;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Unique key for transect (line).',
  })
  LineKey: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Unique key for Gap Intercept data collection.',
  })
  RecKey: string;

  @ApiProperty({
    type: Date,
    required: false,
    // example: '2021-08-04',
    description: `Date data were collected (defaults to today's date although user can modify).`,
  })
  FormDate: Date;

  @ApiProperty({
    type: Date,
    required: false,
    // example: '2021-08-04',
    description: 'Date that collection occurred.',
  })
  DateModified: Date;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Form for Gap Intercept data collection.',
  })
  FormType: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Denotes whether transect is read from low-to-high (e.g., 0-100 m) or high-to-low (e.g., 100-0 m).',
  })
  Direction: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'Data collected in metric. Data originally collected in imperial units are converted to metric.',
  })
  Measure: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'Length of the Gap Intercept transect (line).',
  })
  LineLengthAmount: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'Minimum gap size in centimeters.',
  })
  GapMin: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: 'What kind of Gap data are being recorded: canopy gap, basal gap, or both. 1 = both canopy and basal; 2 = canopy only; 3 = basal only.',
    enum: ['1', '2', '3'],
  })
  GapData: number;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Do perennial plants stop a canopy gap?” (i.e., are they considered to be "canopy"). At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
    enum: ['0', '1'],
  })
  PerennialsCanopy: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Do annual grasses stop a canopy gap?” (i.e., are they considered to be "canopy"). At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
    enum: ['0', '1'],
  })
  AnnualGrassesCanopy: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Do annual forbs stop a basal gap?” At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
  })
  AnnualForbsCanopy: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Are there other species or elements that stop a canopy gap?” (i.e., are they considered to be "canopy"). At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
    enum: ['0', '1'],
  })
  OtherCanopy: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Notes about the Gap Intercept data collection for the transect (line).',
  })
  Notes: string;

  @ApiProperty({
    type: Number,
    required: false,
    description: '1 = no canopy gaps exist for the transect (line); 0 = basal gaps exist for the transect (line).',
    enum: ['0', '1'],
  })
  NoCanopyGaps: number;

  @ApiProperty({
    type: Number,
    required: false,
    description: '1 = no basal gaps exist for the transect (line); 0 = basal gaps exist for the transect (line).',
    enum: ['0', '1'],
  })
  NoBasalGaps: number;

  @ApiProperty({
    type: Date,
    required: false,
    // example: '2021-08-04',
    description: 'Date that the data were uploaded into Landscape Data Commons (YYYY-MM-DD).',
  })
  DateLoadedInDb: Date;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Do perennial plants stop a basal gap?” At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
    enum: ['0', '1'],
  })
  PerennialsBasal: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Do annual grasses stop a basal gap?” At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
    enum: ['0', '1'],
  })
  AnnualGrassesBasal: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Do annual forbs stop a basal gap?” At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
    enum: ['0', '1'],
  })
  AnnualForbsBasal: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Checkbox answering the question “Are there other species or elements that stop a basal gap?” At least one option that stops a gap must be selected. 1 = yes; 0 = no.',
    enum: ['0', '1'],
  })
  OtherBasal: string;

  @ApiProperty({
    type: String,
    required: false,
    description: 'Source data format. Required for use of terradactyl',
  })
  source: string;
}
